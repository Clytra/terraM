{
	"info": {
		"_postman_id": "44295fca-3bd5-4cdc-98c3-577b3720e4c0",
		"name": "Kalolalo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "terraM",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "get user by id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"Test01\",\n\t\"password\": \"qwerty\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"1"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Wyświetlanie danych użytkownika po nr id"
							},
							"response": []
						},
						{
							"name": "get all users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/users",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users"
									]
								},
								"description": "Wyświetlanie listy użytkowników."
							},
							"response": []
						},
						{
							"name": "login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "39cda546-ecec-43e4-b1d5-9dfa8caca415",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"access_token not empty\", function () {",
											"    pm.expect(jsonData.access_token).not.eql(undefined);",
											"});",
											"",
											"pm.test(\"refresh token not empty\", function () {",
											"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
											"});",
											"",
											"if (jsonData.access_token !== undefined) {",
											"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"} else {",
											"    postman.setEnvironmentVariable(\"access_token\", null);",
											"}",
											"",
											"if (jsonData.refresh_token !== undefined) {",
											"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
											"} else {",
											"    postman.setEnvironmentVariable(\"refresh_token\", null);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"Test01\",\n\t\"password\": \"qwerty\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								},
								"description": "Logowanie użytkownika."
							},
							"response": []
						},
						{
							"name": "logout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1ODA0OTkyNjcsIm5iZiI6MTU4MDQ5OTI2NywianRpIjoiNTc2NzI5MGMtMzgxYS00MzgwLTk4YzktYTU4NWRlYjE3ZTI3IiwiZXhwIjoxNTgwNTAwMTY3LCJpZGVudGl0eSI6MSwiZnJlc2giOnRydWUsInR5cGUiOiJhY2Nlc3MiLCJ1c2VyX2NsYWltcyI6eyJpc19hZG1pbiI6dHJ1ZX19.g52q9DyGMl5AQnVqCI-75Q_9Yz4HZmg6EIm9Bbv7yyI",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/logout",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"logout"
									]
								},
								"description": "Wylogowanie użytkownika."
							},
							"response": []
						},
						{
							"name": "register",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"Test01\",\n\t\"password\": \"qwerty\",\n\t\"first_name\": \"Imię01\",\n\t\"last_name\": \"Nazwisko01\",\n\t\"phone_number\": \"111111\",\n\t\"email\": \"test@o2.pl\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"register"
									]
								},
								"description": "Rejestracja użytkownika."
							},
							"response": []
						},
						{
							"name": "refresh token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c569e38-bc0f-4902-a0bc-57156063fa9e",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"access_token not empty\", function () {",
											"    pm.expect(jsonData.access_token).not.eql(undefined);",
											"});",
											"",
											"if (jsonData.access_token !== undefined) {",
											"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"} else {",
											"    postman.setEnvironmentVariable(\"access_token\", null);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/refresh",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"refresh"
									],
									"query": [
										{
											"key": "username",
											"value": "Test01",
											"disabled": true
										}
									]
								},
								"description": "Rejestracja użytkownika."
							},
							"response": []
						},
						{
							"name": "edit user by id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"1"
									]
								},
								"description": "Edycja użytkownika"
							},
							"response": []
						},
						{
							"name": "delete user by id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"Test01\",\n\t\"password\": \"qwerty\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"1"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Usuwanie użytkownika po nr id"
							},
							"response": []
						}
					],
					"description": "Część dotycząca użytkownika:\n- rejestracja,\n- logowanie,\n- edycja,\n- usuwanie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2b9d67bc-61ee-4f2b-a46e-d01956e44f2f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "23522d4a-c0ba-4110-bb5a-17915e482d21",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "tournaments",
					"item": [
						{
							"name": "get tournament by id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/tournament/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"tournament",
										"1"
									]
								},
								"description": "Wyświetlanie danych turnieju na podstawie nr id"
							},
							"response": []
						},
						{
							"name": "get all tournaments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/tournaments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"tournaments"
									]
								},
								"description": "Wyświetlenie listy turniejów."
							},
							"response": []
						},
						{
							"name": "add tournament",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tournament_name\": \"turniej1\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/add_tournament",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"add_tournament"
									],
									"query": [
										{
											"key": "name",
											"value": "rfdfrd",
											"disabled": true
										},
										{
											"key": "city",
											"value": "cscs",
											"disabled": true
										}
									]
								},
								"description": "Dodanie turnieju do bazy."
							},
							"response": []
						},
						{
							"name": "edit tournament by id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "id",
										"type": "text",
										"value": "1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"pz1\": 45\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/tournament/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"tournament",
										"1"
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"disabled": true
										}
									]
								},
								"description": "Edycja danych turnieju po numerze id."
							},
							"response": []
						},
						{
							"name": "delete member",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/tournament/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"tournament",
										"1"
									]
								},
								"description": "Usunięcie turnieju po nr id."
							},
							"response": []
						}
					],
					"description": "Część dotycząca turniejów:\n- dodawanie turnieju,\n- edycja,\n- usuwanie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c5144ea4-7596-4d2a-83e9-1db906357dd7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a4ab52b8-4e1e-4cf0-9e22-b2aa61fa6c56",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "userstournaments",
					"item": [
						{
							"name": "joinTournament",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/join/1/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"join",
										"1",
										"1"
									]
								},
								"description": "Dołączenie do turnieju (relacja user-tournament i rekord w score)."
							},
							"response": []
						}
					],
					"description": "Tabela pośrednia w relacji \"wiele do wielu\" => user - tournament",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "860902c6-bfb2-4083-8c31-cf2fc1b54e0f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5b36b637-3b1e-4074-974e-6fcf47f81d8d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "scores",
					"item": [
						{
							"name": "get list by tournament id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"Test01\",\n\t\"password\": \"qwerty\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/scores/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"scores",
										"1"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Lista uczestników turnieju wraz z wynikami, po nr id."
							},
							"response": []
						},
						{
							"name": "first round",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/api/score/first_round/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"score",
										"first_round",
										"1"
									]
								},
								"description": "Lista uczestników pierwszej rundy i losowanie stolików."
							},
							"response": []
						},
						{
							"name": "tournament points first",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/api/score/scores_first_round/1/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"score",
										"scores_first_round",
										"1",
										"1"
									]
								},
								"description": "Wyliczenie dużych punktów per stolik i wyświetlenie, w zależności od wyników pierwszej rundy."
							},
							"response": []
						},
						{
							"name": "tournament points second",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/api/score/scores_second_round/1/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"score",
										"scores_second_round",
										"1",
										"1"
									]
								},
								"description": "Wyliczenie dużych punktów per stolik i wyświetlenie, w zależności od wyników drugiej rundy."
							},
							"response": []
						},
						{
							"name": "second round",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/api/score/second_round/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"score",
										"second_round",
										"1"
									]
								},
								"description": "Lista uczestników drugiej rundy i losowanie stolików."
							},
							"response": []
						},
						{
							"name": "tie breaker first",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/api/score/tie_breaker_first/1/4",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"score",
										"tie_breaker_first",
										"1",
										"4"
									]
								},
								"description": "Dodanie tie breakera 1 dla konkretnego użytkownika po numerze id."
							},
							"response": []
						},
						{
							"name": "tie breaker second",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/api/score/tie_breaker_second/1/23",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"score",
										"tie_breaker_second",
										"1",
										"23"
									]
								},
								"description": "Dodanie tie breakera 2 dla konkretnego użytkownika po numerze id."
							},
							"response": []
						},
						{
							"name": "third round",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/api/score/third_round/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"score",
										"third_round",
										"1"
									]
								},
								"description": "Wyłonienie finalistów."
							},
							"response": []
						}
					],
					"description": "Część odpowiadająca za przeliczanie wyników, stolików itp podczas turnieju.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0dd0a57c-1dbf-4029-add8-a5106d1d7358",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1d897dce-5296-46c5-b019-5a2310ed24b3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}